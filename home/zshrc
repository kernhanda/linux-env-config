# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

################################################################################
# Generic helper functions
################################################################################

# Returns whether the given command is executable or aliased.
_has() {
  return $(whence $1 >/dev/null)
}

# Prepend a directory to path, if it exists.
_prepend_to_path() {
  if [ -d $1 ]; then
    path=($1 $path);
  fi
}

# Append a directory to path, if it exists and isn't already in the path.
_append_to_path() {
  if [ -d $1 -a -z ${path[(r)$1]} ]; then
    path=($path $1);
  fi
}


# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# always reply yes to update prompt
DISABLE_UPDATE_PROMPT=true

# OMZ messes with the ls colors by default. Let's not have it do that.
DISABLE_LS_COLORS=true
export LS_COLORS=

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    git
    history-substring-search
    colored-man-pages
    vi-mode
    git-auto-fetch
    fd
    ripgrep
    fast-syntax-highlighting
    zsh-autosuggestions
)

################################################################################
# FZF setup
################################################################################

# Add fzf to path. We use locally-installed versions of fzf.
fzf_paths=(
  "${HOME}/.fzf"
  "${HOME}/.local/share/nvim/lazy/fzf"
  "${HOME}/.local/share/nvim/site/pack/packer/start/fzf"
  "${HOME}/.vim/plugged/fzf"
)
for fzf_path in "${fzf_paths[@]}"; do
  if [ -d $fzf_path ]; then
    _prepend_to_path "${fzf_path}/bin"
    break
  fi
done

if _has fzf; then
  if _has fd; then
    # Use fd for fzf.
    FZF_DEFAULT_COMMAND='fd --type f --follow --hidden'
    FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    # Use fd for fzf directory search.
    FZF_ALT_C_COMMAND='fd --type d --color never'
  fi

  # Display source tree and file preview for ALT-C.
  FZF_ALT_C_OPTS="--preview '(eza --tree --icons --level 3 --color=always --group-directories-first {} || tree -C {}) | head -200'"

  # Bind alt-j/k/d/u to moving the preview window for fzf.
  FZF_DEFAULT_OPTS="--bind alt-k:preview-up,alt-j:preview-down,alt-u:preview-page-up,alt-d:preview-page-down"

  # Show previews for files and directories.
  # Having `bat` or `highlight` (or any of the other binaries below) installed
  # enables syntax highlighting.
  FZF_CTRL_T_OPTS="--preview '(bat --style=numbers --color=always {} || highlight -O ansi -l {} || coderay {} || rougify {} || cat {}) 2> /dev/null | head -200'"

  # Some basic fzf-tab configs.
  plugins+=(fzf-tab)
  zstyle ':fzf-tab:complete:cd:*' fzf-preview '(eza --tree --icons --color=always $realpath || tree -C $realpath) 2> /dev/null'
  zstyle ':completion:*:descriptions' format '[%d]'
  zstyle ':fzf-tab:*' switch-group ',' '.'
fi

################################################################################
# Editor setup
################################################################################

# Set Vim as the default editor.
export EDITOR="vim"
# Use Neovim instead of classic Vim (if available)
if _has nvim; then
  alias vim="nvim"
  alias vi="nvim"
  export EDITOR="nvim"
fi

################################################################################
# Tmux setup
################################################################################

# Use 256 color for tmux.
alias tmux="TERM=screen-256color-bce tmux"
# Attempt to take over existing sessions before creating a new tmux session.
TMUX_DEFAULT_SESSION="tmux"
alias t="tmux -u a -d -t ${TMUX_DEFAULT_SESSION} 2> /dev/null || tmux -u new -s ${TMUX_DEFAULT_SESSION}"
if [[ -z "$TMUX" ]]; then
  # Switch to xterm if we're in a tmux session.
  TERM="xterm-256color"
fi

################################################################################
# Set up other environment variables, aliases, and options
################################################################################

# Make sure we're using UTF-8.
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8

export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="bg=italic,underline"
export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"
# Export theme for http://github.com/sharkdp/bat.
export BAT_THEME="Solarized (dark)"

# The bat executable may sometimes be called batcat on Debian/Ubuntu.
if _has batcat; then
  alias bat="batcat"
fi
if _has bat; then
  alias cat="bat"
fi

# Set shell options.
setopt correct # enable spelling suggestions
setopt rmstarsilent # silence rm * confirmation

# history optimization
setopt append_history         # Allow multiple sessions to append to one Zsh command history.
setopt extended_history       # Show timestamp in history.
setopt hist_expire_dups_first # Expire A duplicate event first when trimming history.
setopt hist_find_no_dups      # Do not display a previously found event.
setopt hist_ignore_all_dups   # Remove older duplicate entries from history.
setopt hist_ignore_dups       # Do not record an event that was just recorded again.
setopt hist_ignore_space      # Do not record an Event Starting With A Space.
setopt hist_reduce_blanks     # Remove superfluous blanks from history items.
setopt hist_save_no_dups      # Do not write a duplicate event to the history file.
setopt hist_verify            # Do not execute immediately upon history expansion.
setopt inc_append_history     # Write to the history file immediately, not when the shell exits.
setopt share_history          # Share history between different instances of the shell.

setopt auto_cd              # Use cd by typing directory name if it's not a command.
setopt auto_list            # Automatically list choices on ambiguous completion.
setopt auto_pushd           # Make cd push the old directory onto the directory stack.
setopt bang_hist            # Treat the '!' character, especially during Expansion.
setopt interactive_comments # Comments even in interactive shells.
setopt multios              # Implicit tees or cats when multiple redirections are attempted.
setopt no_beep              # Don't beep on error.
setopt prompt_subst         # Substitution of parameters inside the prompt each time the prompt is drawn.
setopt pushd_ignore_dups    # Don't push multiple copies directory onto the directory stack.
setopt pushd_minus          # Swap the meaning of cd +1 and cd -1 to the opposite.
setopt pushd_silent         # Do not print the directory stack after pushd or popd.

# Decrease delay in entering normal mode in shell.
# https://www.johnhawthorn.com/2012/09/vi-escape-delays/
KEYTIMEOUT=1

################################################################################
# Source Oh-My-ZSH.
################################################################################

# All theme and plugin configs must come beforehand.
# Sourcing this may have side-effects, so order matters.
# For the most part, it seems like bindkey gets overwritten.
# Hence they must be after the OMZ sourcing.
source $ZSH/oh-my-zsh.sh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

export PATH=$HOME/.local/bin:$PATH:/opt/nvim

################################################################################
# Actions with side-effects after sourcing Oh-My-ZSH
################################################################################

# Set key bindings.
bindkey -v # vi mode for shell
bindkey -e # enable C-x-e for shell editor
# Key bindings for history search.
bindkey '\e[3~' delete-char
bindkey '^R' history-incremental-search-backward
# Explicitly bind home and end keys (in case of terminal compatibility issues)
bindkey "${terminfo[khome]}" beginning-of-line
bindkey "${terminfo[kend]}" end-of-line

# Alias `eza` as default `ls` command (if available).
# This must come after OMZ. (The library overwrites this alias.)
if _has eza; then
  alias ls="eza"
  alias ll="eza -l"
fi

# Source fzf scripts via local installation.
# OMZ overwrites some of these scripts, so this must come afterwards.
if _has fzf; then
  # Source fzf key bindings and auto-completion.
  # NOTE: This uses the ${fzf_path} variable from earlier. This is intentional.
  source "${fzf_path}/shell/key-bindings.zsh"
  source "${fzf_path}/shell/completion.zsh"
fi

if _has zoxide; then
  export ___ZOXIDE_DETECTED=true
  eval "$(zoxide init --cmd cd zsh)"
fi

alias find="fd"
alias grep="rg"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export OBSIDIAN_VAULTS=""

# Source local zshrc configs.
if [[ -f ~/.zshrc.local ]]; then
  source ~/.zshrc.local
fi
